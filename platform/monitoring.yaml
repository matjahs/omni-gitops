apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  labels:
    app.kubernetes.io/managed-by: argocd
    app.kubernetes.io/part-of: platform
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: "45.6.5"
    helm:
      values: |
        grafana:
          ingress:
            enabled: true
            ingressClassName: traefik
            hosts:
              - grafana.apps.lab.mxe11.nl
            tls:
              - secretName: grafana-tls-cert
                hosts:
                  - grafana.apps.lab.mxe11.nl
            annotations:
              traefik.ingress.kubernetes.io/router.entrypoints: websecure
              traefik.ingress.kubernetes.io/router.tls: "true"
              traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
        prometheus:
          ingress:
            enabled: true
            ingressClassName: traefik
            hosts:
              - prometheus.apps.lab.mxe11.nl
            tls:
              - secretName: prometheus-tls-cert
                hosts:
                  - prometheus.apps.lab.mxe11.nl
            annotations:
              traefik.ingress.kubernetes.io/router.entrypoints: websecure
              traefik.ingress.kubernetes.io/router.tls: "true"
              traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
